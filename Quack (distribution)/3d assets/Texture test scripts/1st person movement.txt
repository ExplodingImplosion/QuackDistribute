extends KinematicBody

var camera_angle = 0
var mouse_sensitivity = 0.3
var screen_size = OS.get_screen_size()
var window_size = OS.get_window_size()
var velocity = Vector3()
var direction = Vector3()

const fly_speed = 40
const fly_accel = 4

# Called when the node enters the scene tree for the first time.
func _ready():
	 OS.set_window_position(screen_size*0.5 - window_size*0.5)
	 set_process_input(true)

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
func _physics_process(delta):
	direction = Vector3()
	var aim = $Head/Camera.get_global_transform().basis
	if Input.is_action_pressed("move_forward"):
		direction -= aim.z
		#print("forward!")
	if Input.is_action_pressed("move_backward"):
		direction += aim.z
	if Input.is_action_pressed("move_left"):
		direction -= aim.x
	if Input.is_action_pressed("move_right"):
		direction += aim.x
	
	direction = direction.normalized()
	var target = direction * fly_speed
	#print(direction)
	velocity = velocity.linear_interpolate(target,fly_accel * delta)
	move_and_slide(velocity)












func _input(event):
	#print(camera_angle)
	#print(velocity)
	
	if Input.is_action_pressed('move_forward'):
		print("forward!")
	
	if event is InputEventMouseMotion:
		$Head.rotate_y(deg2rad(-event.relative.x * mouse_sensitivity))
		
		var change = event.relative.y * mouse_sensitivity
		if change + camera_angle < 90 and change + camera_angle > -90:
			$Head/Camera.rotate_z(deg2rad(change))
			camera_angle += change
		
