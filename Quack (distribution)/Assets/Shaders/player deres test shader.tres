[gd_resource type="VisualShader" load_steps=45 format=2]

[ext_resource path="res://3d assets/Materials/De-res textures/Fractal Block Noise 3.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Multiply_Degree"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "Power_Degree"

[sub_resource type="VisualShaderNodeScalarUniform" id=3]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeVec3Uniform" id=5]
uniform_name = "Direction"

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
output_port_for_preview = 0
function = 17

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=16]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=17]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "Mesh_Size"

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=23]
constant = Vector3( -1.25, -1, 0 )

[sub_resource type="VisualShaderNodeVec3Constant" id=24]
constant = Vector3( 1, -1.35, 0 )

[sub_resource type="VisualShaderNodeVec3Constant" id=25]
constant = Vector3( -1, 0.8, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=26]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=29]

[sub_resource type="VisualShaderNodeVectorOp" id=30]

[sub_resource type="VisualShaderNodeVectorOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=32]

[sub_resource type="VisualShaderNodeTexture" id=33]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=34]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=35]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=36]

[sub_resource type="VisualShaderNodeTexture" id=37]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=38]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=39]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=40]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=41]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=42]
uniform_name = "Counts"

[sub_resource type="VisualShaderNodeScalarUniform" id=43]
uniform_name = "Divisor"

[resource]
code = "shader_type spatial;
render_mode blend_add, unshaded;

uniform vec4 Color : hint_color;
uniform float Speed;
uniform sampler2D tex_frg_55;uniform float Divisor;
uniform float Counts;
uniform float Power_Degree;
uniform float Multiply_Degree;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:14
	vec3 n_out14p0;
	float n_out14p1;
	n_out14p0 = Color.rgb;
	n_out14p1 = Color.a;

// Input:22
	vec3 n_out22p0;
	n_out22p0 = vec3(UV,0.0);

// Input:37
	vec3 n_out37p0;
	n_out37p0 = vec3(UV,0.0);

// ScalarUniform:12
	float n_out12p0;
	n_out12p0 = Speed;

// Input:46
	float n_out46p0;
	n_out46p0 = TIME;

// ScalarOp:47
	float n_out47p0;
	n_out47p0 = n_out12p0 * n_out46p0;

// VectorOp:54
	vec3 n_out54p0;
	n_out54p0 = n_out37p0 + vec3(n_out47p0);

// Texture:55
	vec3 n_out55p0;
	float n_out55p1;
	vec4 tex_frg_55_read = texture( tex_frg_55 , n_out54p0.xy );
	n_out55p0 = tex_frg_55_read.rgb;
	n_out55p1 = tex_frg_55_read.a;

// ScalarUniform:9
	float n_out9p0;
	n_out9p0 = Divisor;

// VectorOp:44
	vec3 n_out44p0;
	n_out44p0 = n_out55p0 * vec3(n_out9p0);

// VectorDecompose:27
	float n_out27p0;
	float n_out27p1;
	float n_out27p2;
	n_out27p0 = n_out44p0.x;
	n_out27p1 = n_out44p0.y;
	n_out27p2 = n_out44p0.z;

// VectorOp:23
	vec3 n_out23p0;
	n_out23p0 = n_out22p0 + vec3(n_out27p0);

// VectorDecompose:29
	float n_out29p0;
	float n_out29p1;
	float n_out29p2;
	n_out29p0 = n_out23p0.x;
	n_out29p1 = n_out23p0.y;
	n_out29p2 = n_out23p0.z;

// ScalarUniform:8
	float n_out8p0;
	n_out8p0 = Counts;

// ScalarOp:30
	float n_out30p0;
	n_out30p0 = n_out29p2 * n_out8p0;

// ScalarFunc:32
	float n_out32p0;
	n_out32p0 = sin(n_out30p0);

// ScalarUniform:11
	float n_out11p0;
	n_out11p0 = Power_Degree;

// ScalarOp:33
	float n_out33p0;
	n_out33p0 = pow( n_out32p0 , n_out11p0 );

// ScalarUniform:10
	float n_out10p0;
	n_out10p0 = Multiply_Degree;

// ScalarOp:34
	float n_out34p0;
	n_out34p0 = n_out33p0 * n_out10p0;

// ScalarClamp:35
	float n_in35p1 = 0.00000;
	float n_in35p2 = 1.00000;
	float n_out35p0;
	n_out35p0 = clamp( n_out34p0, n_in35p1, n_in35p2 );

// VectorOp:36
	vec3 n_out36p0;
	n_out36p0 = n_out14p0 * vec3(n_out35p0);

// Output:0
	ALBEDO = n_out36p0;
	ALPHA = n_out30p0;
	EMISSION = n_out36p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2816.5, 193 )
modes/blend = 1
flags/unshaded = true
nodes/fragment/0/position = Vector2( 440, 140 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -480, 1060 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -240, 1000 )
nodes/fragment/4/node = SubResource( 21 )
nodes/fragment/4/position = Vector2( -400, 1260 )
nodes/fragment/5/node = SubResource( 31 )
nodes/fragment/5/position = Vector2( -40, 1180 )
nodes/fragment/6/node = SubResource( 41 )
nodes/fragment/6/position = Vector2( 180, 1000 )
nodes/fragment/8/node = SubResource( 42 )
nodes/fragment/8/position = Vector2( -1540, 340 )
nodes/fragment/9/node = SubResource( 43 )
nodes/fragment/9/position = Vector2( -2160, 1040 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -880, 840 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1060, 840 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -3580, 1320 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -500, 280 )
nodes/fragment/22/node = SubResource( 6 )
nodes/fragment/22/position = Vector2( -2120, -20 )
nodes/fragment/23/node = SubResource( 7 )
nodes/fragment/23/position = Vector2( -1880, 100 )
nodes/fragment/27/node = SubResource( 8 )
nodes/fragment/27/position = Vector2( -2020, 400 )
nodes/fragment/29/node = SubResource( 9 )
nodes/fragment/29/position = Vector2( -1680, 120 )
nodes/fragment/30/node = SubResource( 11 )
nodes/fragment/30/position = Vector2( -1360, 100 )
nodes/fragment/31/node = SubResource( 12 )
nodes/fragment/31/position = Vector2( -1180, -320 )
nodes/fragment/32/node = SubResource( 13 )
nodes/fragment/32/position = Vector2( -1180, -140 )
nodes/fragment/33/node = SubResource( 14 )
nodes/fragment/33/position = Vector2( -880, 600 )
nodes/fragment/34/node = SubResource( 15 )
nodes/fragment/34/position = Vector2( -700, 600 )
nodes/fragment/35/node = SubResource( 16 )
nodes/fragment/35/position = Vector2( -480, 600 )
nodes/fragment/36/node = SubResource( 17 )
nodes/fragment/36/position = Vector2( -240, 400 )
nodes/fragment/37/node = SubResource( 18 )
nodes/fragment/37/position = Vector2( -3860, 840 )
nodes/fragment/38/node = SubResource( 19 )
nodes/fragment/38/position = Vector2( -3280, 760 )
nodes/fragment/39/node = SubResource( 20 )
nodes/fragment/39/position = Vector2( -3280, 880 )
nodes/fragment/40/node = SubResource( 22 )
nodes/fragment/40/position = Vector2( -3280, 1000 )
nodes/fragment/41/node = SubResource( 23 )
nodes/fragment/41/position = Vector2( -3860, 1020 )
nodes/fragment/42/node = SubResource( 24 )
nodes/fragment/42/position = Vector2( -3860, 1120 )
nodes/fragment/43/node = SubResource( 25 )
nodes/fragment/43/position = Vector2( -3860, 1220 )
nodes/fragment/44/node = SubResource( 26 )
nodes/fragment/44/position = Vector2( -1900, 840 )
nodes/fragment/46/node = SubResource( 27 )
nodes/fragment/46/position = Vector2( -3580, 1380 )
nodes/fragment/47/node = SubResource( 28 )
nodes/fragment/47/position = Vector2( -3380, 1320 )
nodes/fragment/48/node = SubResource( 29 )
nodes/fragment/48/position = Vector2( -3080, 760 )
nodes/fragment/49/node = SubResource( 30 )
nodes/fragment/49/position = Vector2( -3080, 880 )
nodes/fragment/50/node = SubResource( 32 )
nodes/fragment/50/position = Vector2( -3080, 1000 )
nodes/fragment/51/node = SubResource( 33 )
nodes/fragment/51/position = Vector2( -2760, 560 )
nodes/fragment/52/node = SubResource( 34 )
nodes/fragment/52/position = Vector2( -2760, 900 )
nodes/fragment/53/node = SubResource( 35 )
nodes/fragment/53/position = Vector2( -2760, 1240 )
nodes/fragment/54/node = SubResource( 36 )
nodes/fragment/54/position = Vector2( -3080, 640 )
nodes/fragment/55/node = SubResource( 37 )
nodes/fragment/55/position = Vector2( -2760, 220 )
nodes/fragment/56/node = SubResource( 38 )
nodes/fragment/56/position = Vector2( -2500, 640 )
nodes/fragment/57/node = SubResource( 39 )
nodes/fragment/57/position = Vector2( -2500, 1060 )
nodes/fragment/58/node = SubResource( 40 )
nodes/fragment/58/position = Vector2( -2340, 820 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 5, 1, 3, 0, 5, 0, 5, 0, 6, 1, 22, 0, 23, 0, 23, 0, 29, 0, 30, 0, 31, 0, 30, 0, 32, 0, 33, 0, 34, 0, 34, 0, 35, 0, 11, 0, 33, 1, 10, 0, 34, 1, 14, 0, 36, 0, 8, 0, 30, 1, 41, 0, 38, 1, 42, 0, 39, 1, 43, 0, 40, 1, 37, 0, 38, 0, 37, 0, 39, 0, 37, 0, 40, 0, 12, 0, 47, 0, 46, 0, 47, 1, 38, 0, 48, 0, 39, 0, 49, 0, 40, 0, 50, 0, 47, 0, 50, 1, 47, 0, 49, 1, 47, 0, 48, 1, 49, 0, 52, 0, 50, 0, 53, 0, 47, 0, 54, 1, 37, 0, 54, 0, 52, 0, 57, 0, 53, 0, 57, 1, 56, 0, 58, 0, 57, 0, 58, 1, 9, 0, 44, 1, 44, 0, 27, 0, 27, 0, 23, 1, 54, 0, 55, 0, 48, 0, 51, 0, 51, 0, 56, 1, 55, 0, 56, 0, 29, 2, 30, 0, 35, 0, 36, 1, 36, 0, 0, 5, 36, 0, 0, 0, 32, 0, 33, 0, 30, 0, 0, 1, 55, 0, 44, 0 )
